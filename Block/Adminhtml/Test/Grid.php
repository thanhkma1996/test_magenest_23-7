<?php
namespace Test\Magenest\Block\Adminhtml\Test;

use Magento\Backend\Block\Widget\Grid as WidgetGrid;

class Grid extends \Magento\Backend\Block\Widget\Grid\Extended {

    protected $_subscriptionCollection;



    public function __construct(\Magento\Backend\Block\Template\Context $context,
                                \Magento\Backend\Helper\Data $backendHelper,
                                \Test\Magenest\Model\ResourceModel\Test\Collection $subscriptionCollection,
                                array $data = []
    ) {
        $this->_subscriptionCollection = $subscriptionCollection;
        parent::__construct($context, $backendHelper, $data);
        $this->setEmptyText(__('No Subscriptions Found'));
    }

     public function _prepareMassaction()
        {
            $this->setMassactionIdField('member_id');
           $this->getMassactionBlock()->setFormFieldName('Magenest');
            $this->getMassactionBlock()->addItem(
                 'delete',
                [
                    'label' => __('Delete'),
                    'url' => $this->getUrl('magenest/*/delete'),
                    'confirm' => __('Are you sure ?'),
                ]
            );
         $this->getMassactionBlock()->addItem(
            'edit',
              [
                'label' => __('Edit'),
                'url' => $this->getUrl('magenest/*/edit'),
             ]
        );
            return $this;
        }


    public function getRowUrl($row)
    {
        return $this->getUrl('magenest/*/edit',['member_id'=>$row->getId()]);
    }



    /**
     * Initialize the subscription collection
     *
     * @return WidgetGrid
     */
    protected function _prepareCollection() {
        $this->setCollection($this->_subscriptionCollection);
        return parent::_prepareCollection(); // TODO: Change the autogenerated stub
    }
    /**
     * Prepare grid columns
     *
     * @return $this
     */
    protected function _prepareColumns() {
        $this->addColumn(
            'member_id',
            [
                'header' => __('ID'),
                'index' => 'member_id',
                'hidden'=>'true',
                'type'=>'hidden',
            ]
        );
        $this->addColumn(
            'name',
            [
                'header' => __('Name'),
                'index' => 'name',
            ]
        );
        $this->addColumn(
            'address',
            [
                'header' => __('address'),
                'index' => 'address',
            ]
        );
        $this->addColumn(
            'phone',
            [
                'header' => __('Phone'),
                'index' => 'phone',
            ]
        );
         $this->addColumn(
                    'create time',
                    [
                        'header' => __('create time'),
                        'index' => 'create_time',
                    ]
                );
          $this->addColumn(
                'update time',
                [
                    'header' => __('updated time'),
                    'index' => 'updated_time',
                ]
            );



    }

}